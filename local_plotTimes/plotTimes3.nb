(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     78113,       1509]
NotebookOptionsPosition[     76875,       1461]
NotebookOutlinePosition[     77229,       1477]
CellTagsIndexPosition[     77186,       1474]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"rawdata", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<~/montecarloPi/data3.csv\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"2", ";;", "3"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"rawdata", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rawdata", "[", 
       RowBox[{"[", 
        RowBox[{"x", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"rawdata", "[", 
       RowBox[{"[", 
        RowBox[{"x", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", 
      RowBox[{"Length", "[", "rawdata", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.708939905843258*^9, 3.708940040780856*^9}, {
   3.708941578289239*^9, 3.7089415784873047`*^9}, {3.7089416261737432`*^9, 
   3.708941736981599*^9}, 3.70894191619479*^9, {3.708942073855761*^9, 
   3.708942081165825*^9}, {3.708942294154216*^9, 3.70894231225895*^9}, {
   3.708944300675901*^9, 3.70894431764461*^9}, {3.712166815464018*^9, 
   3.712166888931953*^9}, {3.7121669815088863`*^9, 3.712167018503991*^9}, {
   3.71216705756715*^9, 3.712167136420444*^9}, {3.712171189805303*^9, 
   3.712171193251853*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "75.86408114433289`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "76.19542384147644`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "73.8089849948883`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "67.47032284736633`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "64.039479970932`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "42.48799705505371`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "45.857598066329956`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.712166822577447*^9, 3.7121668892947702`*^9}, {
   3.7121669914645977`*^9, 3.712167018831829*^9}, {3.712167120022197*^9, 
   3.712167136762175*^9}, 3.712169270516885*^9, 3.7121773075655193`*^9, 
   3.71219010544942*^9, 3.7121976987534513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Fit", "Subsubsection",
 CellChangeTimes->{{3.7121695179478607`*^9, 3.712169539620076*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"avgPoints", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"rawdata", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}], "/", 
         RowBox[{"Length", "[", 
          RowBox[{"rawdata", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}], "]"}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"rawdata", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"4", ";;", "5"}], ",", "2"}], "]"}], "]"}], "/", 
         RowBox[{"Length", "[", 
          RowBox[{"rawdata", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", ";;", "5"}], ",", "2"}], "]"}], "]"}], "]"}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"rawdata", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"6", ";;", "7"}], ",", "2"}], "]"}], "]"}], "/", 
         RowBox[{"Length", "[", 
          RowBox[{"rawdata", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"6", ";;", "7"}], ",", "2"}], "]"}], "]"}], "]"}]}], 
        "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712169301721444*^9, 3.712169438981452*^9}, {
   3.712169508138439*^9, 3.712169512554406*^9}, 3.712177308835812*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lm", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"avgPoints", ",", "x", ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", "lm", "]"}]}], "Input",
 CellChangeTimes->{{3.712169542971039*^9, 3.7121695896820507`*^9}, {
   3.7121696747952633`*^9, 3.712169731321999*^9}, {3.71216977475451*^9, 
   3.712169781642291*^9}, 3.712171539293087*^9, {3.712190682192111*^9, 
   3.712190688472824*^9}}],

Cell[BoxData[
 RowBox[{"86.08054858446123`", "\[VeryThinSpace]", "-", 
  RowBox[{"10.43206430333002`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.712169586361927*^9, 3.7121695899978943`*^9}, 
   3.7121696752512417`*^9, {3.7121697053007298`*^9, 3.7121697317225*^9}, 
   3.712169782099337*^9, 3.712171539648642*^9, {3.7121773111730633`*^9, 
   3.712177315313425*^9}, {3.712190101083024*^9, 3.712190105681199*^9}, 
   3.7121906850938683`*^9, 3.712197698890903*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7089400329111643`*^9, 3.7089400614969683`*^9}, {
   3.7089411545518713`*^9, 3.7089411604947853`*^9}, {3.70894125051187*^9, 
   3.708941267853284*^9}, {3.708942552294718*^9, 3.708942554029945*^9}, {
   3.708942629739388*^9, 3.708942630404202*^9}, {3.7089427023479013`*^9, 
   3.7089427028819637`*^9}, {3.712166962261085*^9, 3.712166972418932*^9}, {
   3.7121673540875597`*^9, 3.71216740845951*^9}, {3.712169902995056*^9, 
   3.712169904049089*^9}, 3.71217154105285*^9, {3.712184676386669*^9, 
   3.712184685095689*^9}, 3.712184938314314*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "lm", "]"}]], "Input",
 CellChangeTimes->{{3.7121705001387587`*^9, 3.712170503352981*^9}, {
  3.7121705451457863`*^9, 3.712170553704177*^9}, {3.7121706031936083`*^9, 
  3.7121706244688177`*^9}, {3.712171028280801*^9, 3.7121710329909897`*^9}, {
  3.7121903950353928`*^9, 3.712190432406495*^9}}],

Cell[BoxData[
 RowBox[{"86.08054858446123`", "\[VeryThinSpace]", "-", 
  RowBox[{"10.43206430333002`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.712170548831356*^9, 3.712170566544175*^9}, {
   3.712170605310388*^9, 3.712170625013023*^9}, {3.7121710301715727`*^9, 
   3.712171033281996*^9}, 3.712190105816348*^9, {3.712190395866145*^9, 
   3.712190432812173*^9}, 3.7121976989895163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["avgPoints"], "Input",
 CellChangeTimes->{{3.712170884679687*^9, 3.712170885761629*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "75.28949666023254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "65.75490140914917`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "44.17279756069183`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.712170886021098*^9, 3.7121901058794613`*^9, 
  3.712197699056143*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardError", "[", "ts_", "]"}], ":=", 
  RowBox[{
   RowBox[{"StandardDeviation", "[", "ts", "]"}], "/", 
   RowBox[{"Abs", "[", "ts", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7121708265837173`*^9, 3.712170875153947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"stderr", "=", 
  RowBox[{"standardError", "[", 
   RowBox[{"avgPoints", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"stderr", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"avgPoints", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"avgPoints", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"stderr", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7121708325697317`*^9, 3.712170847284267*^9}, {
   3.7121708902998123`*^9, 3.712170900481668*^9}, {3.7121710921774387`*^9, 
   3.712171157582356*^9}, {3.712171250764062*^9, 3.7121712523010406`*^9}, 
   3.712171282474167*^9, {3.712171318073578*^9, 3.712171318265277*^9}, {
   3.712171371976264*^9, 3.7121713727200127`*^9}, {3.7121714121550922`*^9, 
   3.712171412489587*^9}, {3.71217732925089*^9, 3.712177329361006*^9}, {
   3.712177367864543*^9, 3.712177420936234*^9}, {3.7121774687358513`*^9, 
   3.712177468948954*^9}, {3.712177506643722*^9, 3.712177522304183*^9}, {
   3.712184492674622*^9, 3.712184492831429*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.21174688253602506`", ",", "0.242450613777249`", ",", 
   "0.3609080041536093`"}], "}"}]], "Output",
 CellChangeTimes->{{3.712170847827901*^9, 3.7121709009779673`*^9}, 
   3.7121710929547586`*^9, {3.7121711551576653`*^9, 3.71217115792878*^9}, {
   3.712171272106307*^9, 3.712171336102481*^9}, 3.712171373285029*^9, 
   3.7121714141199083`*^9, {3.712177319422214*^9, 3.7121773298325787`*^9}, 
   3.712177421667107*^9, 3.712177469237715*^9, {3.712177507226818*^9, 
   3.712177522604046*^9}, 3.7121844931932364`*^9, 3.712184581763736*^9, 
   3.712190105953082*^9, 3.712197699156191*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "75.28949666023254`", ",", "0.21174688253602506`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "65.75490140914917`", ",", "0.242450613777249`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "44.17279756069183`", ",", "0.3609080041536093`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.712170847827901*^9, 3.7121709009779673`*^9}, 
   3.7121710929547586`*^9, {3.7121711551576653`*^9, 3.71217115792878*^9}, {
   3.712171272106307*^9, 3.712171336102481*^9}, 3.712171373285029*^9, 
   3.7121714141199083`*^9, {3.712177319422214*^9, 3.7121773298325787`*^9}, 
   3.712177421667107*^9, 3.712177469237715*^9, {3.712177507226818*^9, 
   3.712177522604046*^9}, 3.7121844931932364`*^9, 3.712184581763736*^9, 
   3.712190105953082*^9, 3.712197699167948*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"points", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"avgPoints", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"lm", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Dashed"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Linear Fit\\n\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Normal", "[", "lm", "]"}], "]"}]}], ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"errplot", "=", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{"stderr", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<.\>\"", ",", "Tiny"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"final", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fit", ",", "errplot"}], 
       RowBox[{"(*", 
        RowBox[{",", "points"}], "*)"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<# cores set\>\"", ",", "\"\<Time (s)\>\""}], "}"}]}], 
      ",", 
      RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<# Cores vs. Average MonteCarlo Runtimes\>\""}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"40", ",", "80"}], "}"}]}], "}"}]}]}], "]"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.7121715346312637`*^9, 3.712171536260508*^9}, {
  3.712177426485095*^9, 3.712177451941193*^9}, {3.7121846038454733`*^9, 
  3.712184619130118*^9}, {3.71218466390511*^9, 3.712184669729765*^9}, {
  3.712184702034561*^9, 3.712184779103588*^9}, {3.712184813527307*^9, 
  3.7121849102835197`*^9}, {3.7121849458724413`*^9, 3.712184963334694*^9}, {
  3.712185087535102*^9, 3.712185180897887*^9}, {3.712190242044591*^9, 
  3.7121902741378307`*^9}, {3.712190376629335*^9, 3.71219038344282*^9}, {
  3.7121904397126102`*^9, 3.7121905037741528`*^9}, {3.712190553759233*^9, 
  3.712190563235591*^9}, {3.712190601580534*^9, 3.712190622081891*^9}, {
  3.712190663800679*^9, 3.712190772231036*^9}, {3.712190935786006*^9, 
  3.7121909566978273`*^9}, {3.71219770709303*^9, 3.712197731612624*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwV0Gs0lHkAx3GakEjGE0eTyyQbiTaiLcr/9xCDcWdWacq9y241i9pWbHK/
ljRbKF1IynFJrfaETTbaCcNJumwhbUJpnEbTIM2a3X3xPZ/33+WRgsCYeSoq
Kj7/9b/nj0aq20YnOieodtRbZPBwIVTiGMLeRrwir51Zns7Dc5/cODZ7L2G1
ZSUtS+PhMGebjho7gTSnu3ssTuHBvR38adMcotBoH5pK4qE21T5NalpCknXu
6vx5kIe/I+oMJkyrSOayW/uio3lIDPg+/L1pIznlUGZZ5sqD5udzHfvWdBIH
3f6KIkUwYu8l50vi+ohuZTlcm4KxpkLY21D3nAjd3n10SgjGiO8eo6ENr8il
vMKqG3bBKGJlGpeFD5PRfFHygDQIG+NuX2eIR8kt+7DQ9KogtD075y+wGCc2
o4e4CVFBsM2fczb0nCCDgSz+CrMgcEYdh9aGSInBLnasV38gxmx+c/skmSTZ
9g1XVpYEIlGRs+73IzJyWVsk9dsaCA3m273BVnLCyXPCFDMQat1qHK07U8T8
/ubrAQ8D8KWndt+p2BmSe6XMzConACMhdUtNTGZJSUF6jZ9rAOjsA/sf1H4h
r+zlPKt5ATg9d1vTNewfcuOYiJHa7I/tRm3eA7I50pRl0XsiwR/araslZjwV
eDu8Kze080eMQ7l8m7UqdJ8HGQw988Phoz8FsuWqmL4j/Wo62A8Z48K+np55
mPzg76wp8oW31eJr2mcZ4BeLT2e4+OJ47fpW74j5MAx2Z5W2+qAz6LLi4EY1
vOWnXa1Z54PWbkG+NUMdlgP98Rb13rj5XQrEg+o4cm3ao3S5N0y4ZMOBBg2Y
ZjO51ae5cFXy0y4mLYD9S/d8c4qL6Kd3P97maYKfQp4WZXjBOSX1VgR7IeRn
g8IOqXrhlGCyWXtsIYZEMfoTyZ54fezK6MUWLQzSTo93yjzwPqYx+l6WNrh2
1o8cf/CAdL+eRnfEIogFr/7Sfc1BnWeXYpeNDu6sqDcJ2MHB6J616xlyHai8
/7lwdb87WNUvhFndi/GtUmeRiq870sLjyru5ujDJbRY5d7phWrH0OLdRFzMR
q/MOO7nBsrmopNOcCXOfkkSv61vgEHXfj5nDxB91ZtVZ1lvQWqpvKJYzEbtD
MNxywRWWrfq5vtv1UJj6LDSc5QofNYnxoxY9MJo3K88Vu0Da/6atw4pCNnbX
9Gq5QFB6nMopoHB0U01xbDYNsar5B69CCh1P9s+uzKRhtbupU1tIYYnga/5A
Go03tmMpJ89QqC67acpJprFVBGnReQov1BsrjX6k4fJRJq6spuDQe79BFEXD
wCM0s11E/fdt6KExoRFfK43I7KDwjfKSXd8mGg/1sjZ7dFFILY78JduRRt7g
r5+6eigYdo2EyBxoqMQviup7QsF9reTlA2sa4+dbyethCmWzM5J4Fg0OI2RZ
xQiFCWGT7ypDGhV7JqZixihssEmqf6lPI2wdq+7dOIWeMGW8J5PG4wfxRpOT
FBTtal9MFtCwXbNw5qaMAmeniP9YjcYJ4aW+g3IKwunslhwGDc+d3bkzMxRW
WWmnfpoDKtuidjXNUjjU1j1cpQDmr5qlkxQU7vIL3MJmgYgTJ42d5yhoTflf
XTIDtMhWflYqKYQU6Gl2yoF/ASOcKOU=
          "]]}}}, {}}, {{}, 
      GraphicsComplexBox[{{1., 75.28949666023254}, {2., 65.75490140914917}, {
       4., 44.17279756069183}, {1., 75.28949666023254}, {2., 
       65.75490140914917}, {4., 44.17279756069183}}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           AbsolutePointSize[6]], {
           InsetBox[
            BoxData[
             FormBox[
              StyleBox["\".\"", FontSize -> Tiny, StripOnInput -> False], 
              TraditionalForm]], 4], {
            LineBox[{{1., 75.50124354276856}, {1., 75.07774977769652}}], 
            LineBox[{
              Offset[{1.5, 0}, {1., 75.50124354276856}], 
              Offset[{-1.5, 0}, {1., 75.50124354276856}]}], 
            LineBox[{
              Offset[{1.5, 0}, {1., 75.07774977769652}], 
              Offset[{-1.5, 0}, {1., 75.07774977769652}]}]}}, {
           InsetBox[
            BoxData[
             FormBox[
              StyleBox["\".\"", FontSize -> Tiny, StripOnInput -> False], 
              TraditionalForm]], 5], {
            LineBox[{{2., 65.99735202292642}, {2., 65.51245079537192}}], 
            LineBox[{
              Offset[{1.5, 0}, {2., 65.99735202292642}], 
              Offset[{-1.5, 0}, {2., 65.99735202292642}]}], 
            LineBox[{
              Offset[{1.5, 0}, {2., 65.51245079537192}], 
              Offset[{-1.5, 0}, {2., 65.51245079537192}]}]}}, {
           InsetBox[
            BoxData[
             FormBox[
              StyleBox["\".\"", FontSize -> Tiny, StripOnInput -> False], 
              TraditionalForm]], 6], {
            LineBox[{{4., 44.53370556484544}, {4., 43.811889556538226`}}], 
            LineBox[{
              Offset[{1.5, 0}, {4., 44.53370556484544}], 
              Offset[{-1.5, 0}, {4., 44.53370556484544}]}], 
            LineBox[{
              Offset[{1.5, 0}, {4., 43.811889556538226`}], 
              
              Offset[{-1.5, 0}, {4., 
               43.811889556538226`}]}]}}}, {}}}], {}}}, {
    Frame -> True, FrameLabel -> {
       FormBox["\"# cores set\"", TraditionalForm], 
       FormBox["\"Time (s)\"", TraditionalForm]}, LabelStyle -> Bold, 
     PlotLabel -> 
     FormBox["\"# Cores vs. Average MonteCarlo Runtimes\"", TraditionalForm], 
     PlotRange -> {All, {40, 80}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 34.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 5}, {33.92022813230749, 86.08054751996487}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Linear Fit\\n86.0805 - 10.4321 x\"", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.5], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.712184910681369*^9, {3.712184947380168*^9, 3.712184965638463*^9}, {
   3.712185092495945*^9, 3.7121851812111177`*^9}, 3.7121901060708838`*^9, 
   3.712190274678259*^9, {3.712190444938057*^9, 3.712190512108657*^9}, {
   3.7121905551304007`*^9, 3.712190563659958*^9}, {3.71219067167872*^9, 
   3.712190772642362*^9}, {3.7121909363403254`*^9, 3.712190957121841*^9}, {
   3.7121976994088917`*^9, 3.712197733045916*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"final", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708944326590282*^9, 3.708944333026308*^9}, {
  3.7121901404540167`*^9, 3.712190160887645*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
NykerRzccmFzQRq7aZampx2zi8kmRzckF4cbnzkpRK4TtkXu4BV1dN0T2ZSW
2m9IbxIbcRevYEwYnFSr4dDpO9Y84SRDOqu5XuvmYH2uvA7TXPVlhcSRPGLv
RWzpTNdu3YjrJytbN+29k/VlkutlG7XOkNwoH7SVaXeEF60bAMCgKBQKCwsL
U1NTOzs7ascCAG2icMU5cRnY4arLleQ35kr3nfI1ZmUrbNQYonC5EdX5LXed
5VDkksKyHjUWUdn0lK8tW66kk1fUyXVP5PNoLlZl6R8HawvTsv3NRTUbDh2+
Y63YWri4lHzP+WqtG2HR7BoNpVrDZsTxLcNWf61YFoWliiXlZmHtvZM9Ixc2
Cq2b/tgvqnVkQAAYeHt7e6UFbR4+fJjP91llBgBFFK4oEpYNqbpEhmxZj1GH
bFLM7opVuCm9WdmskC/oerP51VM3PeU766GbCxUn3hJX/pDkOzR38oo6ue6J
bO2X842b+04+6TELvbYmGg4dvmMtEa91qeqEKXFl46G5KtubbYq7RM2Ju0xl
giPic6ttQCX/VldvD7bxTvaKXMRWSg+2+b5Zd7hFZEAAGGw//PDD7du3xW2k
PB6P2kEBQDsoXFGU35wT7kNv6KTF8q2l/PZTthzxhaR815ubK8L2ScngnLjN
0rC00kpY6+KyqyNmT/n+OLNula3YalasZ9PRK+rguifyyTKjZofHM1fd7OzC
WjdXB+quTb9s1ZQGDYfO3rEWybdSOr9g1bVuxPWTzxecKV85v7suiT+UbdV0
xi/b5H1o2i+2JPMb/mnxKz805qkzM661dxLXiAwIAIPq6Ojo1atXpgpOp5OB
NwD6EYUrShbNip2sh8fMVqt5bEj+aNXFUfObC8onj45ZJevYiOLZurUWF3/Z
WjQrTnzz9Lw3lbfus+tVboU7eUWdXFe29ktdQ9ZWGlnX7mBzQTblp27DoaN3
rFXibk1nai1TvGmWf9hDIzqrJJnH5M9WDLm5ePFrytCHRm6efX9uKr/UN0Ya
DiNq6Z3EtSEDAsBASqfTjx8/ruzbLC0tHR8fqx0dALSDwhWCpEOnvClVGDYv
1Gq95LcWlffDSkNz7dy25/1SgxObF2rNwerkFXVw3fxG5ZSequRr7PSig405
YRmb+g2HTj6plu2uiOsA194cPLmi7MBUkPzVxwEdbDb8Sp9deqHmgsHys7Xw
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
tkWuFnL5fCam+hhcwUy+kM/ncvlWlaTPq2JQt6l+LxuTN6iOnU8Odoc01mfp
ZkQYGjno0s32wceyuzuoFZLiRdO6jZi6ZjruWud24YpldovTRU2JcmTnXtLq
cySX08JrFV8iu7Q1AAAAsL+jKd3kNF0yzHUV0KGdVqUj1RQcXaeFbB2UOEHH
DrfH59Y89biC+4URzTGO+AKhSDQaCQW0D+rx7jPNiIOMxCcszaQou2v0aH4+
4vKFwtHtQAI+TSCaJVoOQHygcAV3FlaW8uKEDmHtBMX9Hmy/J6v7bMCtCWqE
xcr33tzn0ZkkNJAs7b+9MIvv3ku3X2m0P8UzrNjhZO+12p26UmWTXySxdJNK
CxPd7H7g6jqbP5k27CKi0/GmI3VXK8NSgNujOy3M7nNrLdd5Cm53azDdgL7C
/d6m+r1sTN6gOo8bOsgd0pjmfPmi+UIh35bLZdKpeCyivceolggffOlmh0v/
qmndakxeM+ZLN672rlzC1N4ij973XdmTyh5tDQAAAIaAMJdF1DjNM7+lluZp
QtH/oXeZsMk/AHvS6gdbxZORfr69lx5LCZ0UWCugWtmpmjH7d2nls4wBzeOG
R/OJyamA8Gfk3dxeM3bJULw4yKxe7Bsz4i80B0KJzyZ6ExT3f7B9nqzuCznt
VkWyZpd5dqkHO8gpvfWSNS9q/zfVM6xUTJg5JH88b/rkiAOmQkHVw2h7thP1
s6QroH4YFJerFkdvGfKEM7JRPKYONbnbs8Lo4X1vP3sfYz9XxQBvU/1dNiZv
UF2nfOn7DmlMszh41OjaE3t9qCb1PaTSjYHWrcb0NdNTr5u+CYvZWd/WAAAA
wLYquWQoFG6KRIJCTwlfMBIJ69jeUuhq79nbMhRK5HRWP1bSjqZR/q1Zoxrz
e/zBSCKdNZiPRUrrDMdQ84QLmtEOeVW/EE84pH0T3978k1I63DFb90W0ZY9q
Pm4iCw+YGKMkLvK7N55FvZG4JFP7oaAaN/E44I+Zf/A3R9PBJpItikOHdAah
HPBgt/o5WepuPJ5AWDuQZPfhVC6ZeQ4OpbXXs5QyfqUvHFOvFCWsWbMllVKd
nxbDKTPjXPYPuOOAl/2JiTpXY8TSTTPOdNcVzcJJ7RTQ6j5avmgm1aGviL/9
DK25DMQAFR9jz1fFIG9TfV02Jm9QXUs3fd8hjWlKN5orYX9TTSV2/44ndp8T
L3tt570OpZtIOtOhSu2PGayGpvkg2r1uDHetnr3KHYiEDK8sX65SSQYNv0PB
lM6NwtK2BgAAAPal7W59QCYm3CiLfS8MVhPe0lu8JpjQWf1HquTj4YDOGBJP
IJ7RH+hQTIZcza7129wud7Aoy7mYaj4BdyCm/Ct0JZ8Kavvhu3zRlPG8nlI5
FdVP3F1uXzRpLpVuPve5t3n2Yo1mdf/8r9rM5VJNiFrOpYI6Q2x2DiAYzZUO
JadPa6YoEU+ldoLiQRzsVq8nqzlZq6v1Zm6XqzlcqJpTX0zuaKa8v3UmYfBh
jvgCkUzRsHNGOZvwaybgiO5UXZrh7kbgdnnEOX53dlvZvpa0D2i+YKxgtPiy
IeWjt0v1H+2hbXsf5P4wKG05S/+BXSqk4wG98VyBcLyoPxm2lAjsHv720bsD
zWJdrZgJiuNtXP5wXLlOkVxKNl+mGU/i3vtSC50Be/wKD/Y21fNlY/IGZaJ0
s/MR936HNNZL6UbTyyXW7jKi+rLrnK/mIlnt70Xzq6n6mkuFhNvVvgO4E82D
qGVi4nfE5fHHs/sVEtPXjLBrX7J95UmFgLt9YlzBZkFP0u7XE4jmd0+pXEjH
hGt5+2NPZA1Hp1nW1gAAAMDGus6o0KsOaXybsBDqNncwoZdbVjSrdezNUKpP
rlUr5VJTsVSq1HrvHi5Vd15eNlqMQ6pWSq33LxbLZtddlbeD2t5+53XlSqVa
s2ilD7l5dLuBlMvbcdQONQ6poL80+R79xY4HGUA/J2tf61IqG6y91Zx+t1za
PanbG1XNfpi13Su0+dZ9XKCV1k6bp7HcxwXeCkExQEks3YTUywDtD/bRbNn5
m779+VTK5dan39eRNjXPYOtyrVQN30HKq24S3ZaCMn9VHMZtqu/Lph29cIMy
Wbpp7/+gd8idfWoGTBleCRmxfqsdFTVoslQp7V41VaMD7PGaMbvf3W92WfcO
X6vu/rrDtayKcZjbGgAAAAxcLmJyHgazTC1zoztdgDuo+NOzXM6n9Ab6BDsM
WoDNVDpM8qE3QTGORocBU+KSxNWs4dglM0Xao1BT30zc0QNMnaU2DLepHks3
g9mncP24gqmqVKvuq1SaFcZcTKcbiO+wC7ammLhmKoV8NteW1y/gAgAAAEel
mk9FwpFt0WhUGLPv8oeaaxFpNLcUBn54grtbhiOpvKknp1JSu25ta69u/cVX
dgRMrV0Lu9BbM3qXdoJiHBXj0s3+SuvtbbOG62DZpXSTFQa3DbB2Yf/blB1K
Nz0IpLq//RHofs3UIuqKXLiXVRQBAACAQ3U0K0y138P00iftBDvSZQZk2I3R
g7/OBMU4MsaLcet0matqRwPtnkOblG62qgnlLM8Drl3Y/TY1VKUb8+vXH7au
10ynxa0AAAAAa4lrdhgnq+a37KyQFKcCNUz61ZMGY0iIC3m36ExQjKNj+Oit
O0NLzmA6LNuUbpqa0xp7dh/DB/6MbefblFi6OYqiaJ+lm0jGXqX3jtcMpRsA
AADYl7CQa9h4QmDzW3YllXNhcSkZgSeWYZzUsNIuMWOX+S6cSxwMssetWZ15
Z2udM9jkMjOr1ZGSi+mIxx8/jNqFbW9T4urbrsjhlxiMrh/jj8YfShft2c/O
6JrRDJg6QBsHAAAADJhUzqbTmR3b/9lpyehaKbO/ZbZ84CfxaimfiIYDPsWS
zx5fIBRNZYs85Q+5am7vUtm9sHJ0ubGWXMpllOdk73tssEi0XM3qbJ3OGS+D
flzZ8TaluBU3z2HhKHq2lPPaK0K4OjKZbDaXLzQXFxvO3pLK78hA2jgAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
gv8PVIhC1Q==
   "], {{0, 0}, {544.68, 249.12}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{544.68, 249.12},
  PlotRange->{{0, 544.68}, {0, 249.12}}]], "Output",
 CellChangeTimes->{
  3.7121909591290913`*^9, {3.712197699752872*^9, 3.712197734675446*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1279, 856},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1243, 30, 46, "Input"],
Cell[1826, 54, 848, 20, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2711, 79, 103, 1, 35, "Subsubsection"],
Cell[2817, 82, 1708, 48, 97, "Input"],
Cell[CellGroupData[{
Cell[4550, 134, 470, 10, 46, "Input"],
Cell[5023, 146, 465, 7, 28, "Output"]
}, Open  ]],
Cell[5503, 156, 589, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[6117, 168, 331, 5, 28, "Input"],
Cell[6451, 175, 391, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6879, 186, 101, 1, 28, "Input"],
Cell[6983, 189, 372, 10, 28, "Output"]
}, Open  ]],
Cell[7370, 202, 261, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[7656, 212, 1321, 30, 46, "Input"],
Cell[8980, 244, 627, 11, 28, "Output"],
Cell[9610, 257, 863, 18, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10510, 280, 3395, 82, 182, "Input"],
Cell[13908, 364, 11637, 242, 271, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25582, 611, 252, 5, 28, "Input"],
Cell[25837, 618, 51010, 839, 264, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

